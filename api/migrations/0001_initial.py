# Generated by Django 4.2.24 on 2025-09-24 16:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('practitioner_reference', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('booked', 'Booked'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='booked', max_length=32)),
                ('service_category', models.CharField(blank=True, max_length=64)),
                ('appointment_type', models.CharField(blank=True, max_length=64)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('confirmation_code', models.CharField(max_length=32, unique=True)),
                ('location', models.CharField(blank=True, max_length=128)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='AuditAnomaly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('period', models.CharField(default='P7D', max_length=16)),
                ('anomalies', models.JSONField(default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(max_length=64)),
                ('user_id', models.CharField(max_length=64)),
                ('resource_type', models.CharField(max_length=64)),
                ('resource_id', models.CharField(max_length=64)),
                ('action', models.CharField(max_length=32)),
                ('timestamp', models.DateTimeField()),
                ('session_id', models.CharField(blank=True, max_length=64)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(default=dict)),
                ('immutable_hash', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('export_id', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(default='processing', max_length=32)),
                ('format', models.CharField(default='csv', max_length=16)),
                ('download_url', models.CharField(blank=True, max_length=255)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('digital_signature', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FhirAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_id', models.CharField(max_length=64, unique=True)),
                ('resource_type', models.CharField(max_length=64)),
                ('resource_id', models.CharField(max_length=64)),
                ('api_key', models.CharField(max_length=64)),
                ('status_code', models.PositiveIntegerField(default=200)),
                ('response_payload', models.JSONField(default=dict)),
                ('occurred_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HL7Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch_id', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(default='pending', max_length=32)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('processed', models.PositiveIntegerField(default=0)),
                ('failed', models.PositiveIntegerField(default=0)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model_id', models.CharField(max_length=64)),
                ('version', models.CharField(max_length=32)),
                ('description', models.TextField(blank=True)),
                ('performance_metrics', models.JSONField(default=dict)),
                ('deployment_config', models.JSONField(default=dict)),
                ('status', models.CharField(default='deployed', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='MLTrainingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_id', models.CharField(max_length=64, unique=True)),
                ('model_name', models.CharField(max_length=128)),
                ('model_type', models.CharField(max_length=64)),
                ('algorithm', models.CharField(max_length=64)),
                ('target_variable', models.CharField(max_length=128)),
                ('features', models.JSONField(default=list)),
                ('parameters', models.JSONField(default=dict)),
                ('dataset_info', models.JSONField(default=dict)),
                ('status', models.CharField(default='running', max_length=32)),
                ('progress', models.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('channels', models.JSONField(default=dict)),
                ('variables', models.JSONField(blank=True, default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource_id', models.CharField(max_length=64, unique=True)),
                ('primary_identifier', models.CharField(max_length=64, unique=True)),
                ('identifiers', models.JSONField(blank=True, default=list)),
                ('first_name', models.CharField(max_length=120)),
                ('middle_name', models.CharField(blank=True, max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], max_length=32)),
                ('birth_date', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator('^[0-9+\\-()\\s]{7,20}$', 'Enter a valid phone number.')])),
                ('address', models.JSONField(blank=True, default=dict)),
                ('telecom', models.JSONField(blank=True, default=list)),
                ('organization_id', models.CharField(blank=True, max_length=64)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('permissions', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator('^[0-9+\\-()\\s]{7,20}$', 'Enter a valid phone number.')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('mfa_enabled', models.BooleanField(default=False)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelemedicineSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_id', models.CharField(max_length=64, unique=True)),
                ('session_type', models.CharField(default='video_consultation', max_length=32)),
                ('scheduled_start', models.DateTimeField()),
                ('estimated_duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('join_urls', models.JSONField(default=dict)),
                ('access_window', models.JSONField(default=dict)),
                ('session_settings', models.JSONField(default=dict)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemedicine_sessions', to='api.appointment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelemedicineMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quality_metrics', models.JSONField(default=dict)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('participants', models.JSONField(default=list)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='api.telemedicinesession')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelemedicineConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.CharField(max_length=64)),
                ('consent_type', models.CharField(max_length=64)),
                ('granted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to='api.telemedicinesession')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('risk_type', models.CharField(max_length=64)),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('level', models.CharField(max_length=32)),
                ('confidence', models.FloatField(default=0.0)),
                ('factors', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('calculated_at', models.DateTimeField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_scores', to='api.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalizedAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('risk_assessment', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('fhir_resources', models.JSONField(default=list)),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='api.mlmodelversion')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personalized_alerts', to='api.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientMerge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(max_length=255)),
                ('merge_strategy', models.CharField(default='keep_latest', max_length=64)),
                ('fields', models.JSONField(blank=True, default=list)),
                ('audit_reason', models.CharField(blank=True, max_length=255)),
                ('merged_fields', models.JSONField(blank=True, default=list)),
                ('audit_id', models.CharField(blank=True, max_length=64)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_merges', to=settings.AUTH_USER_MODEL)),
                ('source_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merge_sources', to='api.patient')),
                ('target_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merge_targets', to='api.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('fhir', 'FHIR'), ('cda', 'CDA')], max_length=8)),
                ('include_sections', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(default='pending', max_length=32)),
                ('download_url', models.CharField(blank=True, max_length=255)),
                ('size', models.CharField(blank=True, max_length=32)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='api.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource_id', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(choices=[('final', 'Final'), ('preliminary', 'Preliminary'), ('amended', 'Amended')], max_length=32)),
                ('category', models.CharField(max_length=64)),
                ('code', models.CharField(max_length=64)),
                ('loinc_code', models.CharField(blank=True, max_length=64)),
                ('effective_time', models.DateTimeField()),
                ('value_quantity', models.JSONField(blank=True, default=dict)),
                ('components', models.JSONField(blank=True, default=list)),
                ('issued', models.DateTimeField(blank=True, null=True)),
                ('performer', models.CharField(blank=True, max_length=128)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='api.patient')),
            ],
            options={
                'ordering': ['-effective_time'],
            },
        ),
        migrations.CreateModel(
            name='NotificationCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign_name', models.CharField(max_length=128)),
                ('recipients', models.JSONField(default=list)),
                ('channels', models.JSONField(default=list)),
                ('scheduled_at', models.DateTimeField()),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='api.notificationtemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient_id', models.CharField(max_length=64)),
                ('channels', models.JSONField(default=list)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(default='normal', max_length=32)),
                ('status', models.CharField(default='scheduled', max_length=32)),
                ('channel_statuses', models.JSONField(blank=True, default=list)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='api.notificationtemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='mlmodelversion',
            name='training_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='model_versions', to='api.mltrainingjob'),
        ),
        migrations.CreateModel(
            name='HL7Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message_id', models.CharField(max_length=64, unique=True)),
                ('correlation_id', models.CharField(blank=True, max_length=64)),
                ('status', models.CharField(default='received', max_length=32)),
                ('raw_message', models.TextField()),
                ('parsed_payload', models.JSONField(blank=True, default=dict)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('hl7_version', models.CharField(default='2.5', max_length=16)),
                ('sending_application', models.CharField(blank=True, max_length=128)),
                ('receiving_application', models.CharField(blank=True, max_length=128)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='api.hl7batch')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='api.patient'),
        ),
        migrations.CreateModel(
            name='WaitlistEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_dates', models.JSONField(blank=True, default=list)),
                ('preferred_times', models.JSONField(blank=True, default=list)),
                ('priority', models.CharField(default='routine', max_length=32)),
                ('notification_preferences', models.JSONField(blank=True, default=dict)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_entries', to='api.appointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist', to='api.patient')),
            ],
            options={
                'unique_together': {('appointment', 'patient')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to='api.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-effective_date'],
                'unique_together': {('user', 'role', 'effective_date')},
            },
        ),
        migrations.CreateModel(
            name='ObservationAlertConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('observation_code', models.CharField(max_length=64)),
                ('thresholds', models.JSONField(default=dict)),
                ('notification_channels', models.JSONField(blank=True, default=list)),
                ('active', models.BooleanField(default=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_configs', to='api.patient')),
            ],
            options={
                'unique_together': {('patient', 'observation_code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='mlmodelversion',
            unique_together={('model_id', 'version')},
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['practitioner_reference', 'start'], name='api_appoint_practit_c8b897_idx'),
        ),
    ]
